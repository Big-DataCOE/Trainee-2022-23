GIT 

GIT IS A TOOL THROUGH WHICH WE CAN COLLABORATE WITH OTHER PEOPLE ACROSS THE GLOBE. 
ALSO IF CODE BREAKS/ MALFUNCTIONS, WITH THE HELP OF GIT WE CAN SEE THE TIMELINE OF OUR PROJECT. 

MAIN OBJECTIVES OF GIT:
1. MAINTAINING THE HISTORY OF THE PROJECT
2. TO SEE WHAT CHANGES ARE MADE BY WHOM 


COMMANDS IN GIT

1. LS : LISTS ALL THE FILES
2. CD : CHANGES DIRECTORY 
3. MKDIR : MAKES A DIRECTORY
4. TOUCH : TOUCH COMMAND IS USED TO MAKE A FILE 
5. GIT INIT: GIT INIT COMMAND IS USED TO INTIALISE A REPOSITORY 
USUALLY ANY SUCH REPOSITORY IS FIRST HIDDEN AND CAN BE SEEN BY LS -A COMMAND 
WHICH SHOWS THE HIDDEN FILES 

6. GIT STATUS : SHOWS THE STATUS, IF UNTRACKED FILES ARE PRESENT, IT SAYS UNTRACKED FILE IS PRESENT 
7. GIT ADD: THIS COMMAND IS USED TO PUT ALL FILES ON THE STAGING AREA 

EXAMPLE: CONSIDER A WEDDING RECEPTION
IN A WEDDING RECEPTION, THE COUPLE IS PRESENT ON THE STAGE TO GET THEIR PHOTOS CLICKED WITH THE GUESTS.THE GUESTS WHOSE PHOTOS ARE NOT CLICKED
AND THEY HAVENT EVEN ARRIVED ON THE STAGE ARE LIKE UNTRACKED FILES AND GIT ADD. OR GIT ADD "FILE NAME"COMMAND IS USED TO BRING SUCH FILES ON STAGE
OR STAGING AREA. 

AS LEARNED FROM THE PHOTOGRAPHY OF A WEDDING EXAMPLE, THE PROCESS OF CLICKING PHOTOGRAPHS IS DONE TO STORE IT IN ALBUMS 
SIMILARLY GIT COMMIT COMMAND IS USED TO SAVE THE HISTORY OF THE PROJECT. 

8: GIT COMMIT -M: THIS FUNCTION IS USED TO COMMIT FILES WITH DISPLAYING A MESSAGE
9. GIT LOG : IT SHOWS THE HISTORY OF COMMITS 

# IT IS IMPORTANT TO BRING FILES ON STAGE BEFORE COMMITING

10. GIT STASH : THIS COMMAND BASICALLY PUTS THE FILES AT THE BACKSTAGE 









GITHUB

IT IS A PLATFORM WHICH ALLOWS US TO HOST OUR REPOSITORIES. 
ONE SHOULD NEVER COMMIT ON MAIN BRANCH BECAUSE MAIN BRANCH IS BEING USED CURRENTLY FOR PROJECTS 
COMMAND FOR CREATING A BRANCH: 
GIT BRANCH "BRANCH NAME"


